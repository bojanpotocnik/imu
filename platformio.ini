; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Do not forget to run `platformio upgrade` and `platformio pkg update` before building the project.

[platformio]
; Set 'debug' or 'release' as a default build type
default_envs = debug

[board]
; Set one of the boards defined below as the project board
extends = esp32s3-usb-cdc


; Common build configuration for all boards
[env]
platform = espressif32
framework = arduino
build_flags =
    -Wall
    -Wextra
lib_deps =
    git+git@github.com:sparkfun/SparkFun_BNO08x_Arduino_Library.git#v1.0.5

[env:release]
extends = board
build_type = release
build_flags = ${board.build_flags}
    -D RELEASE

[env:debug]
extends = board
build_type = debug
build_flags = ${board.build_flags}
    -D DEBUG


# Board specific configurations

[esp32s3-usb-cdc]
; Tested on m5stack-stamps3 board
board = esp32-s3-devkitc-1
; ESP32S3 is connected directly to the USB-C plug, without USB-to-UART adapter chip - the Serial should be
; using the native USB-CDC peripheral of the ESP32S3 chip (ARDUINO_USB_CDC_ON_BOOT=1), which is off by default.
build_flags =
    -D ARDUINO_USB_CDC_ON_BOOT=1
; Requesting to set 1200 baud rate signalizes the ESP USB-CDC peripheral to reboot the chip to bootloader mode.
board_upload.use_1200bps_touch = yes
; If software USB stack would be used, the USB port would re-enumerates after the chip is reset to bootloader mode
; and the following line would need to be uncommented to wait for the port to reappear.
; However, this is not necessary with the native USB-CDC peripheral as it stays configured when booting to bootloader.
;board_upload.wait_for_upload_port = yes
; Disable launching the flasher stub, only talk to ROM bootloader - it is true that some features
; might not be available, but the flasher stub does not use the integrated USB CDC peripheral and
; the communication is lost after the stub is launched.
upload_flags = --no-stub
; The upload_port is not specified here, as it is reliably automatically detected by the upload tool
; by inspecting the USB device descriptor of the connected USB-CDC device.


